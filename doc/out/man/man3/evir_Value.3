.TH "evir::Value" 3 "Tue Apr 12 2022" "Version 0.0.1" "EvIr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
evir::Value
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBevir::Constant\fP, and \fBevir::Reference\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBis_constant\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBConstant\fP "
.ti -1c
.RI "bool \fBis_operator\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBOperator\fP "
.ti -1c
.RI "bool \fBis_reference\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBReference\fP "
.ti -1c
.RI "virtual String \fBgenerate_ir\fP (const char *format=nullptr)=0"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "virtual String evir::Value::generate_ir (const char * format = \fCnullptr\fP)\fC [pure virtual]\fP"
Generates the IR for the value 
.PP
\fBReturns\fP
.RS 4
the IR as a string (without a newline) 
.RE
.PP

.PP
Implemented in \fBevir::IntegerConst\fP, \fBevir::FloatConst\fP, \fBevir::ArrayConst\fP, \fBevir::MapConst\fP, and \fBevir::Constant\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for EvIr from the source code\&.
