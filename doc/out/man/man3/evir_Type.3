.TH "evir::Type" 3 "Tue Apr 26 2022" "Version 0.0.1" "EvIr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
evir::Type \- The interface for types\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <include/ir/type\&.hpp>\fP
.PP
Inherited by \fBevir::FloatType\fP, \fBevir::FunctionType\fP, \fBevir::IntegerType\fP, and \fBevir::PointerType\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBoperator==\fP (const \fBType\fP &rhs)=0"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBType\fP &rhs)"
.br
.ti -1c
.RI "bool \fBis_integer_type\fP ()"
.br
.ti -1c
.RI "bool \fBis_float_type\fP ()"
.br
.ti -1c
.RI "bool \fBis_pointer_type\fP ()"
.br
.ti -1c
.RI "bool \fBis_function_type\fP ()"
.br
.ti -1c
.RI "\fBType\fP * \fBget_pointer_to\fP (uint depth=1)"
.br
.RI "Constructs a pointer to the the current instance's type\&. "
.ti -1c
.RI "virtual String \fBgenerate_ir\fP ()=0"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBIntegerType\fP * \fBget_integer_type\fP (bool is_signed, uint64 bits_count)"
.br
.RI "Constructs a new \fBIntegerType\fP\&. "
.ti -1c
.RI "static \fBFloatType\fP * \fBget_float_type\fP (uint64 bits_count)"
.br
.RI "Constructs a new \fBFloatType\fP\&. "
.ti -1c
.RI "static \fBPointerType\fP * \fBget_pointer_type\fP (\fBType\fP *subtype)"
.br
.RI "Constructs a new \fBPointerType\fP\&. "
.ti -1c
.RI "static \fBFunctionType\fP * \fBget_function_type\fP (\fBType\fP *return_type, Vector< \fBType\fP * > params)"
.br
.RI "Constructs a new \fBFunctionType\fP\&. "
.in -1c
.SH "Detailed Description"
.PP 
The interface for types\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual String evir::Type::generate_ir ()\fC [pure virtual]\fP"
Generates the IR for the type 
.PP
\fBReturns\fP
.RS 4
the IR as a string (without a newline) 
.RE
.PP

.PP
Implemented in \fBevir::IntegerType\fP, \fBevir::FloatType\fP, \fBevir::PointerType\fP, and \fBevir::FunctionType\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for EvIr from the source code\&.
