.TH "evir::Constant" 3 "Thu Apr 28 2022" "Version 0.0.1" "EvIr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
evir::Constant
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBevir::Value\fP\&.
.PP
Inherited by \fBevir::ArrayConst\fP, \fBevir::FloatConst\fP, \fBevir::IntegerConst\fP, and \fBevir::MapConst\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBis_integer\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBIntegerConst\fP "
.ti -1c
.RI "bool \fBis_float\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBFloatConst\fP "
.ti -1c
.RI "bool \fBis_array\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBArrayConst\fP "
.ti -1c
.RI "bool \fBis_map\fP ()"
.br
.RI "returns \fCtrue\fP if this is an instance of \fBMapConst\fP "
.ti -1c
.RI "virtual String \fBgenerate_ir\fP ()=0"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBIntegerConst\fP * \fBnew_integer\fP (int64 value)"
.br
.ti -1c
.RI "static \fBFloatConst\fP * \fBnew_float\fP (float2 value)"
.br
.ti -1c
.RI "static \fBArrayConst\fP * \fBnew_array\fP (Vector< \fBValue\fP * > elements)"
.br
.ti -1c
.RI "static \fBMapConst\fP * \fBnew_map\fP (Map< \fBValue\fP *COMMA \fBValue\fP * > pairs)"
.br
.ti -1c
.RI "static \fBStringConst\fP * \fBnew_string\fP (String string)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "virtual String evir::Constant::generate_ir ()\fC [pure virtual]\fP"

.PP
Generates the IR for the value 
.PP
\fBReturns\fP
.RS 4
the IR as a string (without a newline) 
.RE
.PP

.PP
Implements \fBevir::Value\fP\&.
.PP
Implemented in \fBevir::IntegerConst\fP, \fBevir::FloatConst\fP, \fBevir::ArrayConst\fP, \fBevir::MapConst\fP, and \fBevir::StringConst\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for EvIr from the source code\&.
